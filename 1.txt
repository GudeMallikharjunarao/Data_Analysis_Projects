DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql', 
        'NAME': 'sample_db',
        'USER': 'root',
        'PASSWORD': '',
        'HOST': 'localhost',   # Or an IP Address that your DB is hosted on
        'PORT': '3306',
    }
}

------ carousel slides-----------

<div id="carouselExampleSlidesOnly" class="carousel slide" data-ride="carousel">
  <div class="carousel-inner">
    <div class="carousel-item active">
        <img src="..." class="d-block w-100" alt="...">
    </div>
    <div class="carousel-item">
      <img src="..." class="d-block w-100" alt="...">
    </div>
    <div class="carousel-item">
      <img src="..." class="d-block w-100" alt="...">
    </div>
  </div>
</div>


Explanation:

<div id="carouselExampleSlidesOnly" class="carousel slide" data-ride="carousel">:

id="carouselExampleSlidesOnly": 
This assigns a unique identifier to this carousel, which can be used for JavaScript interactions or styling.

class="carousel slide": These classes are used by Bootstrap to style and enable the carousel functionality.


carousel: Indicates that this div is a carousel component.

slide: Enables sliding transitions between items in the carousel.

data-ride="carousel": This data attribute tells Bootstrap to automatically initialize the carousel functionality when the page loads.

<div class="carousel-inner">:

This container holds all the carousel-item elements, which represent each individual slide in the carousel.
<div class="carousel-item active">:

class="carousel-item": This class defines an individual slide within the carousel.
active: This class makes this slide visible when the carousel loads. 

Only one carousel-item should have the active class at any time to show the initial slide.
<img src="..." class="d-block w-100" alt="...">:

src="...": The src attribute should contain the URL of the image you want to display in the carousel.
class="d-block w-100": These classes come from Bootstrap:
d-block: Ensures the image is displayed as a block-level element.
w-100: Makes the image take up 100% of the width of its container, ensuring it fits within the carousel.
Additional carousel-item Elements:

The code includes multiple carousel-item divs. Each represents a different slide in the carousel. Only the one with the active class will be visible initially, and the others will be hidden until the carousel transitions to them.


----------------With controls------------------------

*** Adding in the previous and next controls. We recommend using <button> elements, but you can also use <a> elements with role="button".

  </div>
 <button class="carousel-control-prev" type="button" data-target="#carouselExampleControls" data-slide="prev">
    <span class="carousel-control-prev-icon" aria-hidden="true"></span>
    <span class="sr-only">Previous</span>
  </button>
  <button class="carousel-control-next" type="button" data-target="#carouselExampleControls" data-slide="next">
    <span class="carousel-control-next-icon" aria-hidden="true"></span>
    <span class="sr-only">Next</span>
  </button>
</div>

--------------With indicators ----------------------------

You can also add the indicators to the carousel, alongside the controls, too.

<div id="carouselExampleIndicators" class="carousel slide" data-ride="carousel">
  <ol class="carousel-indicators">
    <li data-target="#carouselExampleIndicators" data-slide-to="0" class="active"></li>
    <li data-target="#carouselExampleIndicators" data-slide-to="1"></li>
    <li data-target="#carouselExampleIndicators" data-slide-to="2"></li>
  </ol>
  <div class="carousel-inner">


-----------with captions-----------------------------

Add captions to your slides easily with the .carousel-caption element within any .carousel-item. 
They can be easily hidden on smaller viewports, as shown below, with optional display utilities.
We hide them initially with .d-none and bring them back on medium-sized devices with .d-md-block.

-------------------------------------------------------------------------------------------

# Single inheritance

class Employee:
    def __init__(self, eno, name, grade):
        self.eno = eno
        self.name = name
        self.grade = grade
        
    def method1(self):
        print("This is the parent class")

class Child(Employee):
    def method2(self):
        print("This is the child class")

# Create an instance of Employee
e = Employee(452, 'Kohli', 'A')
#e.method1()

# Create an instance of Child
c = Child(453, 'Rohit', 'B')
c.method1()  
c.method2()
c.eno

shubham.sharma14@piramal.com

Sameer.Mahale2@piramal.com




https://drive.google.com/file/d/1nBHKm3pDArn2Z66inetUMLOMy_hW7-vh/view?usp=sharing

